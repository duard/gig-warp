-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.answer_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  component_name text NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT answer_types_pkey PRIMARY KEY (id),
  CONSTRAINT answer_types_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT answer_types_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT answer_types_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id)
);
CREATE TABLE public.answers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  response_id uuid NOT NULL,
  question_id uuid NOT NULL,
  value jsonb NOT NULL,
  status_id uuid,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT answers_pkey PRIMARY KEY (id),
  CONSTRAINT answers_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT answers_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.questions(id),
  CONSTRAINT answers_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.status_types(id),
  CONSTRAINT answers_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT answers_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT answers_response_id_fkey FOREIGN KEY (response_id) REFERENCES public.responses(id)
);
CREATE TABLE public.approvals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  response_id uuid NOT NULL,
  approver_id uuid NOT NULL,
  status_id uuid NOT NULL,
  notes text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT approvals_pkey PRIMARY KEY (id),
  CONSTRAINT approvals_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT approvals_response_id_fkey FOREIGN KEY (response_id) REFERENCES public.responses(id),
  CONSTRAINT approvals_approver_id_fkey FOREIGN KEY (approver_id) REFERENCES auth.users(id),
  CONSTRAINT approvals_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.status_types(id),
  CONSTRAINT approvals_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT approvals_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.attachments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  file_id uuid NOT NULL,
  target_type text NOT NULL,
  target_id text NOT NULL,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT attachments_pkey PRIMARY KEY (id),
  CONSTRAINT attachments_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT attachments_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id),
  CONSTRAINT attachments_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT attachments_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  target_type text NOT NULL,
  target_id text NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  status_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT comments_pkey PRIMARY KEY (id),
  CONSTRAINT comments_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT comments_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.status_types(id),
  CONSTRAINT comments_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT comments_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.external_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  supabase_user_id uuid NOT NULL UNIQUE,
  external_system text NOT NULL,
  external_user_id text NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT external_users_pkey PRIMARY KEY (id),
  CONSTRAINT external_users_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT external_users_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT external_users_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT external_users_supabase_user_id_fkey FOREIGN KEY (supabase_user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  storage_path text NOT NULL UNIQUE,
  mime_type text NOT NULL,
  file_name text NOT NULL,
  byte_size bigint NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT files_pkey PRIMARY KEY (id),
  CONSTRAINT files_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT files_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT files_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  username text UNIQUE,
  email text,
  full_name text,
  bio text,
  website text,
  is_online boolean DEFAULT false,
  last_login_at timestamp with time zone,
  login_count integer DEFAULT 0,
  last_seen_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.questions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_list_id uuid NOT NULL,
  question_text text NOT NULL,
  description text,
  answer_type_id uuid NOT NULL,
  is_required boolean DEFAULT false,
  order_index integer NOT NULL,
  options jsonb,
  default_status_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT questions_pkey PRIMARY KEY (id),
  CONSTRAINT questions_task_list_id_fkey FOREIGN KEY (task_list_id) REFERENCES public.task_lists(id),
  CONSTRAINT questions_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT questions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT questions_default_status_id_fkey FOREIGN KEY (default_status_id) REFERENCES public.status_types(id),
  CONSTRAINT questions_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT questions_answer_type_id_fkey FOREIGN KEY (answer_type_id) REFERENCES public.answer_types(id)
);
CREATE TABLE public.responses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_list_id uuid NOT NULL,
  user_id uuid NOT NULL,
  target_type text NOT NULL,
  target_id text NOT NULL,
  status_id uuid,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT responses_pkey PRIMARY KEY (id),
  CONSTRAINT responses_task_list_id_fkey FOREIGN KEY (task_list_id) REFERENCES public.task_lists(id),
  CONSTRAINT responses_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT responses_status_id_fkey FOREIGN KEY (status_id) REFERENCES public.status_types(id),
  CONSTRAINT responses_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT responses_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT responses_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id)
);
CREATE TABLE public.status_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  icon text,
  color text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT status_types_pkey PRIMARY KEY (id),
  CONSTRAINT status_types_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT status_types_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT status_types_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.task_lists (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  list_type text NOT NULL,
  default_status_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  created_by uuid NOT NULL,
  updated_by uuid,
  deleted_by uuid,
  CONSTRAINT task_lists_pkey PRIMARY KEY (id),
  CONSTRAINT task_lists_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT task_lists_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT task_lists_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES auth.users(id),
  CONSTRAINT task_lists_default_status_id_fkey FOREIGN KEY (default_status_id) REFERENCES public.status_types(id)
);
CREATE TABLE public.todos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  counter bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  text text,
  done boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted boolean DEFAULT false,
  CONSTRAINT todos_pkey PRIMARY KEY (id)
);